var deferPrompt,enableNotificationButton=document.querySelector("#enableNotification"),thisDocument=document.querySelector("body");function configurePush(){var i;"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(o){return(i=o).pushManager.getSubscription()}).then(function(o){if(!!(null===o)){console.log("[app.js] Not subscribed. Creating new subscription...");var e=urlBase64ToUint8Array("BPO-z8rUg0R6-7GR9oxQ0a-_MLW3KU1oCQztC4XlvTSyTEnz-Qk3_v9Tkc1MY0jYETdQE2Jz68WYWprfMOboYrc");return i.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:e})}console.log("[app.js] Subscribed. Doing nothing.")}).then(function(o){return fetch("https://otonokizaka-3a6d9.firebaseio.com/subscriptions.json",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(o)})}).then(function(o){o.ok&&showConfirmNotification()}).catch(function(o){console.log("[SW] Error creating subscription. ",o)})}function requestNotificationPermission(){console.log("[app.js] Notification permission requested."),Notification.requestPermission(function(o){console.log("[app.js] Notification permission: ",o),"granted"!==o?console.log("[app.js] User disapproved request."):(console.log("[app.js] User approved request."),configurePush())})}function showConfirmNotification(){if("serviceWorker"in navigator){var e={body:"Âµ's will show notifications.",icon:"/src/images/icons/nozomi/app-icon-96x96.png",image:"/src/images/mfs-image-small.jpg",dir:"ltr",lang:"en-US",vibrate:[100,100,100],badge:"/src/images/icons/nozomi/app-icon-96x96.png",tag:"confirm-notification",renotify:!0,actions:[{action:"confirm",title:"Okay",icon:"/src/images/icons/accept.png"},{action:"cancel",title:"Cancel",icon:"/src/images/icons/cancel.png"}]};navigator.serviceWorker.ready.then(function(o){o.showNotification("Subscription successful",e)})}}window.Promise||(window.Promise=Promise),"Notification"in window&&(console.log("[app.js] Notifications are supported by client."),requestNotificationPermission()),window.addEventListener("beforeinstallprompt",function(o){return console.log("[app.js] Install prompt suppressed."),o.preventDefault(),deferPrompt=o,!1}),"serviceWorker"in navigator&&navigator.serviceWorker.register("/arceus.js").then(function(){console.log("Service worker is registered.")}).catch(function(o){console.log(o.code,o.message)}),navigator.serviceWorker.addEventListener("message",function(o){console.log("[app.js] Received message from service worker."+o.data)});